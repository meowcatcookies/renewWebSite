@model shopping.Models.Users

@{
    ViewData["Title"] = SessionService.ActionName;
    Layout = "_LayoutLite";
    List<SelectListItem> GenderList = new List<SelectListItem>();
    List<SelectListItem> DepartmentList = new List<SelectListItem>();
    List<SelectListItem> TitleList = new List<SelectListItem>();
    using var repoGender = new z_sqlCodeDatas();
    using var repoDepartment = new z_sqlDepartments();
    using var repoTitle = new z_sqlTitles();
    GenderList = repoGender.GetDropDownList("Gender", false);
    DepartmentList = repoDepartment.GetDropDownList("DeptNo", "DeptName", "DeptNo", true);
    TitleList = repoTitle.GetDropDownList("TitleNo", "TitleName", "TitleNo", true);
}

<div class="card card-size-small mt-5">
    <div class="card header bg-secondary text-white">
        <div class="pt-2 px-2">
            <div class="float-start">
                <h4>@SessionService.ActionName</h4>
            </div>
            <div class="float-end">
                <h4>@SessionService.PrgInfo</h4>
            </div>
        </div>
    </div>
    <div class="card body p-2">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(m => m.Id)
                @Html.HiddenFor(m => m.IsValid)
                @Html.HiddenFor(m => m.UserNo)
                @Html.HiddenFor(m => m.UserName)
                @Html.HiddenFor(m => m.CodeNo)
                @Html.HiddenFor(m => m.RoleNo)
                @Html.HiddenFor(m => m.Password)
                @Html.HiddenFor(m => m.Birthday)
                @Html.HiddenFor(m => m.OnboardDate)
                @Html.HiddenFor(m => m.LeaveDate)

                <div class="row form-group">
                    @Html.LabelFor(model => model.UserNo, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UserNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.UserNo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.GenderName, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(model => model.GenderCode, GenderList, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.GenderCode, "", new { @class = "text-danger" })
                    </div>
                </div>
                @if (SessionService.RoleNo != "Member")
                {
                    <div class="row form-group">
                        @Html.LabelFor(model => model.DeptName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.DeptNo, DepartmentList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeptNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row form-group">
                        @Html.LabelFor(model => model.TitleName, htmlAttributes: new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.TitleNo, TitleList, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TitleNo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
                <div class="row form-group">
                    @Html.LabelFor(model => model.ContactEmail, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactEmail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactEmail, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.ContactTel, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactTel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactTel, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="row form-group">
                    @Html.LabelFor(model => model.ContactAddress, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ContactAddress, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ContactAddress, "", new { @class = "text-danger" })
                    </div>
                </div>
                <hr>
                <div class="row form-group">
                    <div class="col-md-12">
                        <div class="float-start">
                            <input type="submit" value="確認修改" class="btn btn-primary" />
                        </div>
                        <div class="float-end">
                            @Html.ActionLink("返回列表", "Index", ActionService.Controller, new { area = ActionService.Area }
                                     , new { @class = "btn btn-success" })
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>